class BinarySearchTree{
    public class Node {
        private int value;
        private Node left;
        private Node right;
        private int height;

        public Node(int value) {
            this.value = value;
        }

        public int getValue() {
            return value;
        }
    }

    private Node root;

    // Constructor
    public BinarySearchTree() {
    }

    // Height function
    public int height(Node node) {
        if (node == null) {
            return -1; // convention: height of empty tree
        }
        return node.height;
    }

    // Check if tree is empty
    public boolean isEmpty() {
        return root == null;
    }

    // Display the tree
    public void display() {
        display(root, "Root Node: ");
    }

    private void display(Node node, String details) {
        if (node == null) {
            return;
        }
        System.out.println(details + node.getValue());
        display(node.left, "Left child of " + node.getValue() + ": ");
        display(node.right, "Right child of " + node.getValue() + ": ");
    }

}
