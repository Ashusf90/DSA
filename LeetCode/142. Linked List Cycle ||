/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    
    public int lengthCycle(ListNode node) {
        ListNode temp = node;
        int length = 0;
        do {
            temp = temp.next;
            length++;
        } while (temp != node);
        return length;
    }

    public ListNode detectCycle(ListNode head) {
        int length = 0;
        ListNode slow = head;
        ListNode fast = head;

        while (fast != null && fast.next != null) {
            fast = fast.next.next;
            slow = slow.next;
            if (slow == fast) { 
                length = lengthCycle(slow);
                break;
            }
        }

        if (length == 0) {
            return null;
        }

        ListNode f = head;
        ListNode s = head;
        while (length > 0) {
            s = s.next;
            length--;
        }

        while (f != s) {
            f = f.next;
            s = s.next;
        }

        return s; 
    }
}
